declare namespace _default {
    export { frameDetached };
    export { cancelPageLoad };
    export { waitForDom };
    export { checkPageIsReady };
    export { navToUrl };
}
export default _default;
/**
 * @this {import('../remote-debugger').RemoteDebugger}
 * @returns {void}
 */
declare function frameDetached(this: import("../remote-debugger").default): void;
/**
 * @this {import('../remote-debugger').RemoteDebugger}
 * @returns {void}
 */
declare function cancelPageLoad(this: import("../remote-debugger").default): void;
declare class cancelPageLoad {
    pageLoading: boolean;
}
/**
 * @this {import('../remote-debugger').RemoteDebugger}
 * @param {timing.Timer|null|undefined} startPageLoadTimer
 * @returns {Promise<void>}
 */
declare function waitForDom(this: import("../remote-debugger").default, startPageLoadTimer: timing.Timer | null | undefined): Promise<void>;
declare class waitForDom {
    /**
     * @this {import('../remote-debugger').RemoteDebugger}
     * @param {timing.Timer|null|undefined} startPageLoadTimer
     * @returns {Promise<void>}
     */
    constructor(this: import("../remote-debugger").default, startPageLoadTimer: timing.Timer | null | undefined);
    pageLoading: boolean;
    pageLoadDelay: B<void>;
}
/**
 * @this {import('../remote-debugger').RemoteDebugger}
 * @param {number} [timeoutMs]
 * @returns {Promise<boolean>}
 */
declare function checkPageIsReady(this: import("../remote-debugger").default, timeoutMs?: number | undefined): Promise<boolean>;
/**
 * @this {import('../remote-debugger').RemoteDebugger}
 * @param {string} url
 * @returns {Promise<void>}
 */
declare function navToUrl(this: import("../remote-debugger").default, url: string): Promise<void>;
declare class navToUrl {
    /**
     * @this {import('../remote-debugger').RemoteDebugger}
     * @param {string} url
     * @returns {Promise<void>}
     */
    constructor(this: import("../remote-debugger").default, url: string);
    _navigatingToPage: boolean;
    pageLoadDelay: B<void>;
    pageLoading: boolean;
}
import { timing } from '@appium/support';
import B from 'bluebird';
//# sourceMappingURL=navigate.d.ts.map