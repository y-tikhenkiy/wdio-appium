declare namespace _default {
    /**
     * @this {XCUITestDriver}
     */
    function active(this: import("../driver").XCUITestDriver): Promise<any>;
    /**
     * Trigger a touch/fingerprint match or match failure
     *
     * @param {boolean} match - whether the match should be a success or failure
     * @this {XCUITestDriver}
     */
    function touchId(this: import("../driver").XCUITestDriver, match?: boolean): Promise<void>;
    /**
     * Toggle whether the device is enrolled in the touch ID program
     *
     * @param {boolean} isEnabled - whether to enable or disable the touch ID program
     *
     * @this {XCUITestDriver}
     */
    function toggleEnrollTouchId(this: import("../driver").XCUITestDriver, isEnabled?: boolean): Promise<void>;
    /**
     * Get the window size
     * @this {XCUITestDriver}
     * @deprecated Use {@linkcode XCUITestDriver.getWindowRect} instead.
     */
    function getWindowSize(this: import("../driver").XCUITestDriver, windowHandle?: string): Promise<any>;
    /**
     * Retrieves the actual device time.
     *
     * @param {string} format - The format specifier string. Read the [MomentJS documentation](https://momentjs.com/docs/) to get the full list of supported datetime format specifiers. The default format is `YYYY-MM-DDTHH:mm:ssZ`, which complies to ISO-8601.
     * @returns {Promise<string>} Formatted datetime string or the raw command output (if formatting fails)
     * @this {XCUITestDriver}
     */
    function getDeviceTime(this: import("../driver").XCUITestDriver, format?: string): Promise<string>;
    /**
     * Retrieves the current device time
     *
     * @param {string} format - See {@linkcode getDeviceTime.format}
     * @returns {Promise<string>} Formatted datetime string or the raw command output if formatting fails
     * @this {XCUITestDriver}
     */
    function mobileGetDeviceTime(this: import("../driver").XCUITestDriver, format?: string): Promise<string>;
    /**
     * For W3C
     * @this {XCUITestDriver}
     */
    function getWindowRect(this: import("../driver").XCUITestDriver): Promise<{
        width: any;
        height: any;
        x: number;
        y: number;
    }>;
    /**
     * @this {XCUITestDriver}
     */
    function removeApp(this: import("../driver").XCUITestDriver, bundleId: any): Promise<boolean>;
    /**
     * @this {XCUITestDriver}
     */
    function launchApp(this: import("../driver").XCUITestDriver): Promise<never>;
    /**
     * @this {XCUITestDriver}
     */
    function closeApp(this: import("../driver").XCUITestDriver): Promise<never>;
    /**
     * @this {XCUITestDriver}
     */
    function setUrl(this: import("../driver").XCUITestDriver, url: any): Promise<void>;
    /**
     * Retrieves the viewport dimensions.
     *
     * The viewport is the device's screen size with status bar size subtracted if the latter is present/visible.
     * @returns {Promise<import('./types').Viewport>}
     * @this {XCUITestDriver}
     */
    function getViewportRect(this: import("../driver").XCUITestDriver): Promise<import("./types").Viewport>;
    /**
     * Get information about the screen.
     *
     * @privateRemarks memoized in constructor
     * @this {XCUITestDriver}
     * @returns {Promise<ScreenInfo>}
     */
    function getScreenInfo(this: import("../driver").XCUITestDriver): Promise<import("./types").ScreenInfo>;
    /**
     * @this {XCUITestDriver}
     */
    function getStatusBarHeight(this: import("../driver").XCUITestDriver): Promise<number>;
    /**
     * memoized in constructor
     * @this {XCUITestDriver}
     */
    function getDevicePixelRatio(this: import("../driver").XCUITestDriver): Promise<number>;
    /**
     * Emulates press action on the given physical device button.
     *
     * This executes different methods based on the platform:
     *
     * - iOS: [`pressButton:`](https://developer.apple.com/documentation/xctest/xcuidevice/1619052-pressbutton)
     * - tvOS: [`pressButton:`](https://developer.apple.com/documentation/xctest/xcuiremote/1627475-pressbutton) or [`pressButton:forDuration:`](https://developer.apple.com/documentation/xctest/xcuiremote/1627476-pressbutton)
     *
     * Use {@linkcode mobilePerformIoHidEvent} to call a more universal API to perform a button press with duration on any supported device.
     *
     * @param {import('./types').ButtonName} name - The name of the button to be pressed.
     * @param {number} [durationSeconds] - The duration of the button press in seconds (float).
     * @this {XCUITestDriver}
     */
    function mobilePressButton(this: import("../driver").XCUITestDriver, name: "up" | "down" | "left" | "right" | "home" | "volumeup" | "volumedown" | "menu" | "playpause" | "select" | "UP" | "Up" | "uP" | "DOwn" | "DOWN" | "DOWn" | "DOwN" | "Down" | "DoWN" | "DoWn" | "DowN" | "dOwn" | "dOWN" | "dOWn" | "dOwN" | "doWN" | "doWn" | "dowN" | "LEft" | "LEFT" | "LEFt" | "LEfT" | "Left" | "LeFT" | "LeFt" | "LefT" | "lEft" | "lEFT" | "lEFt" | "lEfT" | "leFT" | "leFt" | "lefT" | "RIght" | "RIGHt" | "RIGHT" | "RIGht" | "RIGhT" | "RIgHt" | "RIgHT" | "RIghT" | "Right" | "RiGHt" | "RiGHT" | "RiGht" | "RiGhT" | "RigHt" | "RigHT" | "RighT" | "rIght" | "rIGHt" | "rIGHT" | "rIGht" | "rIGhT" | "rIgHt" | "rIgHT" | "rIghT" | "riGHt" | "riGHT" | "riGht" | "riGhT" | "rigHt" | "rigHT" | "righT" | "HOme" | "HOME" | "HOMe" | "HOmE" | "Home" | "HoME" | "HoMe" | "HomE" | "hOme" | "hOME" | "hOMe" | "hOmE" | "hoME" | "hoMe" | "homE" | "VOlumeup" | "VOLUmeup" | "VOLUMEup" | "VOLUMEUP" | "VOLUMEUp" | "VOLUMEuP" | "VOLUMeup" | "VOLUMeUP" | "VOLUMeUp" | "VOLUMeuP" | "VOLUmEup" | "VOLUmEUP" | "VOLUmEUp" | "VOLUmEuP" | "VOLUmeUP" | "VOLUmeUp" | "VOLUmeuP" | "VOLumeup" | "VOLuMEup" | "VOLuMEUP" | "VOLuMEUp" | "VOLuMEuP" | "VOLuMeup" | "VOLuMeUP" | "VOLuMeUp" | "VOLuMeuP" | "VOLumEup" | "VOLumEUP" | "VOLumEUp" | "VOLumEuP" | "VOLumeUP" | "VOLumeUp" | "VOLumeuP" | "VOlUmeup" | "VOlUMEup" | "VOlUMEUP" | "VOlUMEUp" | "VOlUMEuP" | "VOlUMeup" | "VOlUMeUP" | "VOlUMeUp" | "VOlUMeuP" | "VOlUmEup" | "VOlUmEUP" | "VOlUmEUp" | "VOlUmEuP" | "VOlUmeUP" | "VOlUmeUp" | "VOlUmeuP" | "VOluMEup" | "VOluMEUP" | "VOluMEUp" | "VOluMEuP" | "VOluMeup" | "VOluMeUP" | "VOluMeUp" | "VOluMeuP" | "VOlumEup" | "VOlumEUP" | "VOlumEUp" | "VOlumEuP" | "VOlumeUP" | "VOlumeUp" | "VOlumeuP" | "Volumeup" | "VoLUmeup" | "VoLUMEup" | "VoLUMEUP" | "VoLUMEUp" | "VoLUMEuP" | "VoLUMeup" | "VoLUMeUP" | "VoLUMeUp" | "VoLUMeuP" | "VoLUmEup" | "VoLUmEUP" | "VoLUmEUp" | "VoLUmEuP" | "VoLUmeUP" | "VoLUmeUp" | "VoLUmeuP" | "VoLumeup" | "VoLuMEup" | "VoLuMEUP" | "VoLuMEUp" | "VoLuMEuP" | "VoLuMeup" | "VoLuMeUP" | "VoLuMeUp" | "VoLuMeuP" | "VoLumEup" | "VoLumEUP" | "VoLumEUp" | "VoLumEuP" | "VoLumeUP" | "VoLumeUp" | "VoLumeuP" | "VolUmeup" | "VolUMEup" | "VolUMEUP" | "VolUMEUp" | "VolUMEuP" | "VolUMeup" | "VolUMeUP" | "VolUMeUp" | "VolUMeuP" | "VolUmEup" | "VolUmEUP" | "VolUmEUp" | "VolUmEuP" | "VolUmeUP" | "VolUmeUp" | "VolUmeuP" | "VoluMEup" | "VoluMEUP" | "VoluMEUp" | "VoluMEuP" | "VoluMeup" | "VoluMeUP" | "VoluMeUp" | "VoluMeuP" | "VolumEup" | "VolumEUP" | "VolumEUp" | "VolumEuP" | "VolumeUP" | "VolumeUp" | "VolumeuP" | "vOlumeup" | "vOLUmeup" | "vOLUMEup" | "vOLUMEUP" | "vOLUMEUp" | "vOLUMEuP" | "vOLUMeup" | "vOLUMeUP" | "vOLUMeUp" | "vOLUMeuP" | "vOLUmEup" | "vOLUmEUP" | "vOLUmEUp" | "vOLUmEuP" | "vOLUmeUP" | "vOLUmeUp" | "vOLUmeuP" | "vOLumeup" | "vOLuMEup" | "vOLuMEUP" | "vOLuMEUp" | "vOLuMEuP" | "vOLuMeup" | "vOLuMeUP" | "vOLuMeUp" | "vOLuMeuP" | "vOLumEup" | "vOLumEUP" | "vOLumEUp" | "vOLumEuP" | "vOLumeUP" | "vOLumeUp" | "vOLumeuP" | "vOlUmeup" | "vOlUMEup" | "vOlUMEUP" | "vOlUMEUp" | "vOlUMEuP" | "vOlUMeup" | "vOlUMeUP" | "vOlUMeUp" | "vOlUMeuP" | "vOlUmEup" | "vOlUmEUP" | "vOlUmEUp" | "vOlUmEuP" | "vOlUmeUP" | "vOlUmeUp" | "vOlUmeuP" | "vOluMEup" | "vOluMEUP" | "vOluMEUp" | "vOluMEuP" | "vOluMeup" | "vOluMeUP" | "vOluMeUp" | "vOluMeuP" | "vOlumEup" | "vOlumEUP" | "vOlumEUp" | "vOlumEuP" | "vOlumeUP" | "vOlumeUp" | "vOlumeuP" | "voLUmeup" | "voLUMEup" | "voLUMEUP" | "voLUMEUp" | "voLUMEuP" | "voLUMeup" | "voLUMeUP" | "voLUMeUp" | "voLUMeuP" | "voLUmEup" | "voLUmEUP" | "voLUmEUp" | "voLUmEuP" | "voLUmeUP" | "voLUmeUp" | "voLUmeuP" | "voLumeup" | "voLuMEup" | "voLuMEUP" | "voLuMEUp" | "voLuMEuP" | "voLuMeup" | "voLuMeUP" | "voLuMeUp" | "voLuMeuP" | "voLumEup" | "voLumEUP" | "voLumEUp" | "voLumEuP" | "voLumeUP" | "voLumeUp" | "voLumeuP" | "volUmeup" | "volUMEup" | "volUMEUP" | "volUMEUp" | "volUMEuP" | "volUMeup" | "volUMeUP" | "volUMeUp" | "volUMeuP" | "volUmEup" | "volUmEUP" | "volUmEUp" | "volUmEuP" | "volUmeUP" | "volUmeUp" | "volUmeuP" | "voluMEup" | "voluMEUP" | "voluMEUp" | "voluMEuP" | "voluMeup" | "voluMeUP" | "voluMeUp" | "voluMeuP" | "volumEup" | "volumEUP" | "volumEUp" | "volumEuP" | "volumeUP" | "volumeUp" | "volumeuP" | "VOlumedown" | "VOLUmedown" | "VOLUMEdown" | "VOLUMEDOwn" | "VOLUMEDOWN" | "VOLUMEDOWn" | "VOLUMEDOwN" | "VOLUMEDown" | "VOLUMEDoWN" | "VOLUMEDoWn" | "VOLUMEDowN" | "VOLUMEdOwn" | "VOLUMEdOWN" | "VOLUMEdOWn" | "VOLUMEdOwN" | "VOLUMEdoWN" | "VOLUMEdoWn" | "VOLUMEdowN" | "VOLUMedown" | "VOLUMeDOwn" | "VOLUMeDOWN" | "VOLUMeDOWn" | "VOLUMeDOwN" | "VOLUMeDown" | "VOLUMeDoWN" | "VOLUMeDoWn" | "VOLUMeDowN" | "VOLUMedOwn" | "VOLUMedOWN" | "VOLUMedOWn" | "VOLUMedOwN" | "VOLUMedoWN" | "VOLUMedoWn" | "VOLUMedowN" | "VOLUmEdown" | "VOLUmEDOwn" | "VOLUmEDOWN" | "VOLUmEDOWn" | "VOLUmEDOwN" | "VOLUmEDown" | "VOLUmEDoWN" | "VOLUmEDoWn" | "VOLUmEDowN" | "VOLUmEdOwn" | "VOLUmEdOWN" | "VOLUmEdOWn" | "VOLUmEdOwN" | "VOLUmEdoWN" | "VOLUmEdoWn" | "VOLUmEdowN" | "VOLUmeDOwn" | "VOLUmeDOWN" | "VOLUmeDOWn" | "VOLUmeDOwN" | "VOLUmeDown" | "VOLUmeDoWN" | "VOLUmeDoWn" | "VOLUmeDowN" | "VOLUmedOwn" | "VOLUmedOWN" | "VOLUmedOWn" | "VOLUmedOwN" | "VOLUmedoWN" | "VOLUmedoWn" | "VOLUmedowN" | "VOLumedown" | "VOLuMEdown" | "VOLuMEDOwn" | "VOLuMEDOWN" | "VOLuMEDOWn" | "VOLuMEDOwN" | "VOLuMEDown" | "VOLuMEDoWN" | "VOLuMEDoWn" | "VOLuMEDowN" | "VOLuMEdOwn" | "VOLuMEdOWN" | "VOLuMEdOWn" | "VOLuMEdOwN" | "VOLuMEdoWN" | "VOLuMEdoWn" | "VOLuMEdowN" | "VOLuMedown" | "VOLuMeDOwn" | "VOLuMeDOWN" | "VOLuMeDOWn" | "VOLuMeDOwN" | "VOLuMeDown" | "VOLuMeDoWN" | "VOLuMeDoWn" | "VOLuMeDowN" | "VOLuMedOwn" | "VOLuMedOWN" | "VOLuMedOWn" | "VOLuMedOwN" | "VOLuMedoWN" | "VOLuMedoWn" | "VOLuMedowN" | "VOLumEdown" | "VOLumEDOwn" | "VOLumEDOWN" | "VOLumEDOWn" | "VOLumEDOwN" | "VOLumEDown" | "VOLumEDoWN" | "VOLumEDoWn" | "VOLumEDowN" | "VOLumEdOwn" | "VOLumEdOWN" | "VOLumEdOWn" | "VOLumEdOwN" | "VOLumEdoWN" | "VOLumEdoWn" | "VOLumEdowN" | "VOLumeDOwn" | "VOLumeDOWN" | "VOLumeDOWn" | "VOLumeDOwN" | "VOLumeDown" | "VOLumeDoWN" | "VOLumeDoWn" | "VOLumeDowN" | "VOLumedOwn" | "VOLumedOWN" | "VOLumedOWn" | "VOLumedOwN" | "VOLumedoWN" | "VOLumedoWn" | "VOLumedowN" | "VOlUmedown" | "VOlUMEdown" | "VOlUMEDOwn" | "VOlUMEDOWN" | "VOlUMEDOWn" | "VOlUMEDOwN" | "VOlUMEDown" | "VOlUMEDoWN" | "VOlUMEDoWn" | "VOlUMEDowN" | "VOlUMEdOwn" | "VOlUMEdOWN" | "VOlUMEdOWn" | "VOlUMEdOwN" | "VOlUMEdoWN" | "VOlUMEdoWn" | "VOlUMEdowN" | "VOlUMedown" | "VOlUMeDOwn" | "VOlUMeDOWN" | "VOlUMeDOWn" | "VOlUMeDOwN" | "VOlUMeDown" | "VOlUMeDoWN" | "VOlUMeDoWn" | "VOlUMeDowN" | "VOlUMedOwn" | "VOlUMedOWN" | "VOlUMedOWn" | "VOlUMedOwN" | "VOlUMedoWN" | "VOlUMedoWn" | "VOlUMedowN" | "VOlUmEdown" | "VOlUmEDOwn" | "VOlUmEDOWN" | "VOlUmEDOWn" | "VOlUmEDOwN" | "VOlUmEDown" | "VOlUmEDoWN" | "VOlUmEDoWn" | "VOlUmEDowN" | "VOlUmEdOwn" | "VOlUmEdOWN" | "VOlUmEdOWn" | "VOlUmEdOwN" | "VOlUmEdoWN" | "VOlUmEdoWn" | "VOlUmEdowN" | "VOlUmeDOwn" | "VOlUmeDOWN" | "VOlUmeDOWn" | "VOlUmeDOwN" | "VOlUmeDown" | "VOlUmeDoWN" | "VOlUmeDoWn" | "VOlUmeDowN" | "VOlUmedOwn" | "VOlUmedOWN" | "VOlUmedOWn" | "VOlUmedOwN" | "VOlUmedoWN" | "VOlUmedoWn" | "VOlUmedowN" | "VOluMEdown" | "VOluMEDOwn" | "VOluMEDOWN" | "VOluMEDOWn" | "VOluMEDOwN" | "VOluMEDown" | "VOluMEDoWN" | "VOluMEDoWn" | "VOluMEDowN" | "VOluMEdOwn" | "VOluMEdOWN" | "VOluMEdOWn" | "VOluMEdOwN" | "VOluMEdoWN" | "VOluMEdoWn" | "VOluMEdowN" | "VOluMedown" | "VOluMeDOwn" | "VOluMeDOWN" | "VOluMeDOWn" | "VOluMeDOwN" | "VOluMeDown" | "VOluMeDoWN" | "VOluMeDoWn" | "VOluMeDowN" | "VOluMedOwn" | "VOluMedOWN" | "VOluMedOWn" | "VOluMedOwN" | "VOluMedoWN" | "VOluMedoWn" | "VOluMedowN" | "VOlumEdown" | "VOlumEDOwn" | "VOlumEDOWN" | "VOlumEDOWn" | "VOlumEDOwN" | "VOlumEDown" | "VOlumEDoWN" | "VOlumEDoWn" | "VOlumEDowN" | "VOlumEdOwn" | "VOlumEdOWN" | "VOlumEdOWn" | "VOlumEdOwN" | "VOlumEdoWN" | "VOlumEdoWn" | "VOlumEdowN" | "VOlumeDOwn" | "VOlumeDOWN" | "VOlumeDOWn" | "VOlumeDOwN" | "VOlumeDown" | "VOlumeDoWN" | "VOlumeDoWn" | "VOlumeDowN" | "VOlumedOwn" | "VOlumedOWN" | "VOlumedOWn" | "VOlumedOwN" | "VOlumedoWN" | "VOlumedoWn" | "VOlumedowN" | "Volumedown" | "VoLUmedown" | "VoLUMEdown" | "VoLUMEDOwn" | "VoLUMEDOWN" | "VoLUMEDOWn" | "VoLUMEDOwN" | "VoLUMEDown" | "VoLUMEDoWN" | "VoLUMEDoWn" | "VoLUMEDowN" | "VoLUMEdOwn" | "VoLUMEdOWN" | "VoLUMEdOWn" | "VoLUMEdOwN" | "VoLUMEdoWN" | "VoLUMEdoWn" | "VoLUMEdowN" | "VoLUMedown" | "VoLUMeDOwn" | "VoLUMeDOWN" | "VoLUMeDOWn" | "VoLUMeDOwN" | "VoLUMeDown" | "VoLUMeDoWN" | "VoLUMeDoWn" | "VoLUMeDowN" | "VoLUMedOwn" | "VoLUMedOWN" | "VoLUMedOWn" | "VoLUMedOwN" | "VoLUMedoWN" | "VoLUMedoWn" | "VoLUMedowN" | "VoLUmEdown" | "VoLUmEDOwn" | "VoLUmEDOWN" | "VoLUmEDOWn" | "VoLUmEDOwN" | "VoLUmEDown" | "VoLUmEDoWN" | "VoLUmEDoWn" | "VoLUmEDowN" | "VoLUmEdOwn" | "VoLUmEdOWN" | "VoLUmEdOWn" | "VoLUmEdOwN" | "VoLUmEdoWN" | "VoLUmEdoWn" | "VoLUmEdowN" | "VoLUmeDOwn" | "VoLUmeDOWN" | "VoLUmeDOWn" | "VoLUmeDOwN" | "VoLUmeDown" | "VoLUmeDoWN" | "VoLUmeDoWn" | "VoLUmeDowN" | "VoLUmedOwn" | "VoLUmedOWN" | "VoLUmedOWn" | "VoLUmedOwN" | "VoLUmedoWN" | "VoLUmedoWn" | "VoLUmedowN" | "VoLumedown" | "VoLuMEdown" | "VoLuMEDOwn" | "VoLuMEDOWN" | "VoLuMEDOWn" | "VoLuMEDOwN" | "VoLuMEDown" | "VoLuMEDoWN" | "VoLuMEDoWn" | "VoLuMEDowN" | "VoLuMEdOwn" | "VoLuMEdOWN" | "VoLuMEdOWn" | "VoLuMEdOwN" | "VoLuMEdoWN" | "VoLuMEdoWn" | "VoLuMEdowN" | "VoLuMedown" | "VoLuMeDOwn" | "VoLuMeDOWN" | "VoLuMeDOWn" | "VoLuMeDOwN" | "VoLuMeDown" | "VoLuMeDoWN" | "VoLuMeDoWn" | "VoLuMeDowN" | "VoLuMedOwn" | "VoLuMedOWN" | "VoLuMedOWn" | "VoLuMedOwN" | "VoLuMedoWN" | "VoLuMedoWn" | "VoLuMedowN" | "VoLumEdown" | "VoLumEDOwn" | "VoLumEDOWN" | "VoLumEDOWn" | "VoLumEDOwN" | "VoLumEDown" | "VoLumEDoWN" | "VoLumEDoWn" | "VoLumEDowN" | "VoLumEdOwn" | "VoLumEdOWN" | "VoLumEdOWn" | "VoLumEdOwN" | "VoLumEdoWN" | "VoLumEdoWn" | "VoLumEdowN" | "VoLumeDOwn" | "VoLumeDOWN" | "VoLumeDOWn" | "VoLumeDOwN" | "VoLumeDown" | "VoLumeDoWN" | "VoLumeDoWn" | "VoLumeDowN" | "VoLumedOwn" | "VoLumedOWN" | "VoLumedOWn" | "VoLumedOwN" | "VoLumedoWN" | "VoLumedoWn" | "VoLumedowN" | "VolUmedown" | "VolUMEdown" | "VolUMEDOwn" | "VolUMEDOWN" | "VolUMEDOWn" | "VolUMEDOwN" | "VolUMEDown" | "VolUMEDoWN" | "VolUMEDoWn" | "VolUMEDowN" | "VolUMEdOwn" | "VolUMEdOWN" | "VolUMEdOWn" | "VolUMEdOwN" | "VolUMEdoWN" | "VolUMEdoWn" | "VolUMEdowN" | "VolUMedown" | "VolUMeDOwn" | "VolUMeDOWN" | "VolUMeDOWn" | "VolUMeDOwN" | "VolUMeDown" | "VolUMeDoWN" | "VolUMeDoWn" | "VolUMeDowN" | "VolUMedOwn" | "VolUMedOWN" | "VolUMedOWn" | "VolUMedOwN" | "VolUMedoWN" | "VolUMedoWn" | "VolUMedowN" | "VolUmEdown" | "VolUmEDOwn" | "VolUmEDOWN" | "VolUmEDOWn" | "VolUmEDOwN" | "VolUmEDown" | "VolUmEDoWN" | "VolUmEDoWn" | "VolUmEDowN" | "VolUmEdOwn" | "VolUmEdOWN" | "VolUmEdOWn" | "VolUmEdOwN" | "VolUmEdoWN" | "VolUmEdoWn" | "VolUmEdowN" | "VolUmeDOwn" | "VolUmeDOWN" | "VolUmeDOWn" | "VolUmeDOwN" | "VolUmeDown" | "VolUmeDoWN" | "VolUmeDoWn" | "VolUmeDowN" | "VolUmedOwn" | "VolUmedOWN" | "VolUmedOWn" | "VolUmedOwN" | "VolUmedoWN" | "VolUmedoWn" | "VolUmedowN" | "VoluMEdown" | "VoluMEDOwn" | "VoluMEDOWN" | "VoluMEDOWn" | "VoluMEDOwN" | "VoluMEDown" | "VoluMEDoWN" | "VoluMEDoWn" | "VoluMEDowN" | "VoluMEdOwn" | "VoluMEdOWN" | "VoluMEdOWn" | "VoluMEdOwN" | "VoluMEdoWN" | "VoluMEdoWn" | "VoluMEdowN" | "VoluMedown" | "VoluMeDOwn" | "VoluMeDOWN" | "VoluMeDOWn" | "VoluMeDOwN" | "VoluMeDown" | "VoluMeDoWN" | "VoluMeDoWn" | "VoluMeDowN" | "VoluMedOwn" | "VoluMedOWN" | "VoluMedOWn" | "VoluMedOwN" | "VoluMedoWN" | "VoluMedoWn" | "VoluMedowN" | "VolumEdown" | "VolumEDOwn" | "VolumEDOWN" | "VolumEDOWn" | "VolumEDOwN" | "VolumEDown" | "VolumEDoWN" | "VolumEDoWn" | "VolumEDowN" | "VolumEdOwn" | "VolumEdOWN" | "VolumEdOWn" | "VolumEdOwN" | "VolumEdoWN" | "VolumEdoWn" | "VolumEdowN" | "VolumeDOwn" | "VolumeDOWN" | "VolumeDOWn" | "VolumeDOwN" | "VolumeDown" | "VolumeDoWN" | "VolumeDoWn" | "VolumeDowN" | "VolumedOwn" | "VolumedOWN" | "VolumedOWn" | "VolumedOwN" | "VolumedoWN" | "VolumedoWn" | "VolumedowN" | "vOlumedown" | "vOLUmedown" | "vOLUMEdown" | "vOLUMEDOwn" | "vOLUMEDOWN" | "vOLUMEDOWn" | "vOLUMEDOwN" | "vOLUMEDown" | "vOLUMEDoWN" | "vOLUMEDoWn" | "vOLUMEDowN" | "vOLUMEdOwn" | "vOLUMEdOWN" | "vOLUMEdOWn" | "vOLUMEdOwN" | "vOLUMEdoWN" | "vOLUMEdoWn" | "vOLUMEdowN" | "vOLUMedown" | "vOLUMeDOwn" | "vOLUMeDOWN" | "vOLUMeDOWn" | "vOLUMeDOwN" | "vOLUMeDown" | "vOLUMeDoWN" | "vOLUMeDoWn" | "vOLUMeDowN" | "vOLUMedOwn" | "vOLUMedOWN" | "vOLUMedOWn" | "vOLUMedOwN" | "vOLUMedoWN" | "vOLUMedoWn" | "vOLUMedowN" | "vOLUmEdown" | "vOLUmEDOwn" | "vOLUmEDOWN" | "vOLUmEDOWn" | "vOLUmEDOwN" | "vOLUmEDown" | "vOLUmEDoWN" | "vOLUmEDoWn" | "vOLUmEDowN" | "vOLUmEdOwn" | "vOLUmEdOWN" | "vOLUmEdOWn" | "vOLUmEdOwN" | "vOLUmEdoWN" | "vOLUmEdoWn" | "vOLUmEdowN" | "vOLUmeDOwn" | "vOLUmeDOWN" | "vOLUmeDOWn" | "vOLUmeDOwN" | "vOLUmeDown" | "vOLUmeDoWN" | "vOLUmeDoWn" | "vOLUmeDowN" | "vOLUmedOwn" | "vOLUmedOWN" | "vOLUmedOWn" | "vOLUmedOwN" | "vOLUmedoWN" | "vOLUmedoWn" | "vOLUmedowN" | "vOLumedown" | "vOLuMEdown" | "vOLuMEDOwn" | "vOLuMEDOWN" | "vOLuMEDOWn" | "vOLuMEDOwN" | "vOLuMEDown" | "vOLuMEDoWN" | "vOLuMEDoWn" | "vOLuMEDowN" | "vOLuMEdOwn" | "vOLuMEdOWN" | "vOLuMEdOWn" | "vOLuMEdOwN" | "vOLuMEdoWN" | "vOLuMEdoWn" | "vOLuMEdowN" | "vOLuMedown" | "vOLuMeDOwn" | "vOLuMeDOWN" | "vOLuMeDOWn" | "vOLuMeDOwN" | "vOLuMeDown" | "vOLuMeDoWN" | "vOLuMeDoWn" | "vOLuMeDowN" | "vOLuMedOwn" | "vOLuMedOWN" | "vOLuMedOWn" | "vOLuMedOwN" | "vOLuMedoWN" | "vOLuMedoWn" | "vOLuMedowN" | "vOLumEdown" | "vOLumEDOwn" | "vOLumEDOWN" | "vOLumEDOWn" | "vOLumEDOwN" | "vOLumEDown" | "vOLumEDoWN" | "vOLumEDoWn" | "vOLumEDowN" | "vOLumEdOwn" | "vOLumEdOWN" | "vOLumEdOWn" | "vOLumEdOwN" | "vOLumEdoWN" | "vOLumEdoWn" | "vOLumEdowN" | "vOLumeDOwn" | "vOLumeDOWN" | "vOLumeDOWn" | "vOLumeDOwN" | "vOLumeDown" | "vOLumeDoWN" | "vOLumeDoWn" | "vOLumeDowN" | "vOLumedOwn" | "vOLumedOWN" | "vOLumedOWn" | "vOLumedOwN" | "vOLumedoWN" | "vOLumedoWn" | "vOLumedowN" | "vOlUmedown" | "vOlUMEdown" | "vOlUMEDOwn" | "vOlUMEDOWN" | "vOlUMEDOWn" | "vOlUMEDOwN" | "vOlUMEDown" | "vOlUMEDoWN" | "vOlUMEDoWn" | "vOlUMEDowN" | "vOlUMEdOwn" | "vOlUMEdOWN" | "vOlUMEdOWn" | "vOlUMEdOwN" | "vOlUMEdoWN" | "vOlUMEdoWn" | "vOlUMEdowN" | "vOlUMedown" | "vOlUMeDOwn" | "vOlUMeDOWN" | "vOlUMeDOWn" | "vOlUMeDOwN" | "vOlUMeDown" | "vOlUMeDoWN" | "vOlUMeDoWn" | "vOlUMeDowN" | "vOlUMedOwn" | "vOlUMedOWN" | "vOlUMedOWn" | "vOlUMedOwN" | "vOlUMedoWN" | "vOlUMedoWn" | "vOlUMedowN" | "vOlUmEdown" | "vOlUmEDOwn" | "vOlUmEDOWN" | "vOlUmEDOWn" | "vOlUmEDOwN" | "vOlUmEDown" | "vOlUmEDoWN" | "vOlUmEDoWn" | "vOlUmEDowN" | "vOlUmEdOwn" | "vOlUmEdOWN" | "vOlUmEdOWn" | "vOlUmEdOwN" | "vOlUmEdoWN" | "vOlUmEdoWn" | "vOlUmEdowN" | "vOlUmeDOwn" | "vOlUmeDOWN" | "vOlUmeDOWn" | "vOlUmeDOwN" | "vOlUmeDown" | "vOlUmeDoWN" | "vOlUmeDoWn" | "vOlUmeDowN" | "vOlUmedOwn" | "vOlUmedOWN" | "vOlUmedOWn" | "vOlUmedOwN" | "vOlUmedoWN" | "vOlUmedoWn" | "vOlUmedowN" | "vOluMEdown" | "vOluMEDOwn" | "vOluMEDOWN" | "vOluMEDOWn" | "vOluMEDOwN" | "vOluMEDown" | "vOluMEDoWN" | "vOluMEDoWn" | "vOluMEDowN" | "vOluMEdOwn" | "vOluMEdOWN" | "vOluMEdOWn" | "vOluMEdOwN" | "vOluMEdoWN" | "vOluMEdoWn" | "vOluMEdowN" | "vOluMedown" | "vOluMeDOwn" | "vOluMeDOWN" | "vOluMeDOWn" | "vOluMeDOwN" | "vOluMeDown" | "vOluMeDoWN" | "vOluMeDoWn" | "vOluMeDowN" | "vOluMedOwn" | "vOluMedOWN" | "vOluMedOWn" | "vOluMedOwN" | "vOluMedoWN" | "vOluMedoWn" | "vOluMedowN" | "vOlumEdown" | "vOlumEDOwn" | "vOlumEDOWN" | "vOlumEDOWn" | "vOlumEDOwN" | "vOlumEDown" | "vOlumEDoWN" | "vOlumEDoWn" | "vOlumEDowN" | "vOlumEdOwn" | "vOlumEdOWN" | "vOlumEdOWn" | "vOlumEdOwN" | "vOlumEdoWN" | "vOlumEdoWn" | "vOlumEdowN" | "vOlumeDOwn" | "vOlumeDOWN" | "vOlumeDOWn" | "vOlumeDOwN" | "vOlumeDown" | "vOlumeDoWN" | "vOlumeDoWn" | "vOlumeDowN" | "vOlumedOwn" | "vOlumedOWN" | "vOlumedOWn" | "vOlumedOwN" | "vOlumedoWN" | "vOlumedoWn" | "vOlumedowN" | "voLUmedown" | "voLUMEdown" | "voLUMEDOwn" | "voLUMEDOWN" | "voLUMEDOWn" | "voLUMEDOwN" | "voLUMEDown" | "voLUMEDoWN" | "voLUMEDoWn" | "voLUMEDowN" | "voLUMEdOwn" | "voLUMEdOWN" | "voLUMEdOWn" | "voLUMEdOwN" | "voLUMEdoWN" | "voLUMEdoWn" | "voLUMEdowN" | "voLUMedown" | "voLUMeDOwn" | "voLUMeDOWN" | "voLUMeDOWn" | "voLUMeDOwN" | "voLUMeDown" | "voLUMeDoWN" | "voLUMeDoWn" | "voLUMeDowN" | "voLUMedOwn" | "voLUMedOWN" | "voLUMedOWn" | "voLUMedOwN" | "voLUMedoWN" | "voLUMedoWn" | "voLUMedowN" | "voLUmEdown" | "voLUmEDOwn" | "voLUmEDOWN" | "voLUmEDOWn" | "voLUmEDOwN" | "voLUmEDown" | "voLUmEDoWN" | "voLUmEDoWn" | "voLUmEDowN" | "voLUmEdOwn" | "voLUmEdOWN" | "voLUmEdOWn" | "voLUmEdOwN" | "voLUmEdoWN" | "voLUmEdoWn" | "voLUmEdowN" | "voLUmeDOwn" | "voLUmeDOWN" | "voLUmeDOWn" | "voLUmeDOwN" | "voLUmeDown" | "voLUmeDoWN" | "voLUmeDoWn" | "voLUmeDowN" | "voLUmedOwn" | "voLUmedOWN" | "voLUmedOWn" | "voLUmedOwN" | "voLUmedoWN" | "voLUmedoWn" | "voLUmedowN" | "voLumedown" | "voLuMEdown" | "voLuMEDOwn" | "voLuMEDOWN" | "voLuMEDOWn" | "voLuMEDOwN" | "voLuMEDown" | "voLuMEDoWN" | "voLuMEDoWn" | "voLuMEDowN" | "voLuMEdOwn" | "voLuMEdOWN" | "voLuMEdOWn" | "voLuMEdOwN" | "voLuMEdoWN" | "voLuMEdoWn" | "voLuMEdowN" | "voLuMedown" | "voLuMeDOwn" | "voLuMeDOWN" | "voLuMeDOWn" | "voLuMeDOwN" | "voLuMeDown" | "voLuMeDoWN" | "voLuMeDoWn" | "voLuMeDowN" | "voLuMedOwn" | "voLuMedOWN" | "voLuMedOWn" | "voLuMedOwN" | "voLuMedoWN" | "voLuMedoWn" | "voLuMedowN" | "voLumEdown" | "voLumEDOwn" | "voLumEDOWN" | "voLumEDOWn" | "voLumEDOwN" | "voLumEDown" | "voLumEDoWN" | "voLumEDoWn" | "voLumEDowN" | "voLumEdOwn" | "voLumEdOWN" | "voLumEdOWn" | "voLumEdOwN" | "voLumEdoWN" | "voLumEdoWn" | "voLumEdowN" | "voLumeDOwn" | "voLumeDOWN" | "voLumeDOWn" | "voLumeDOwN" | "voLumeDown" | "voLumeDoWN" | "voLumeDoWn" | "voLumeDowN" | "voLumedOwn" | "voLumedOWN" | "voLumedOWn" | "voLumedOwN" | "voLumedoWN" | "voLumedoWn" | "voLumedowN" | "volUmedown" | "volUMEdown" | "volUMEDOwn" | "volUMEDOWN" | "volUMEDOWn" | "volUMEDOwN" | "volUMEDown" | "volUMEDoWN" | "volUMEDoWn" | "volUMEDowN" | "volUMEdOwn" | "volUMEdOWN" | "volUMEdOWn" | "volUMEdOwN" | "volUMEdoWN" | "volUMEdoWn" | "volUMEdowN" | "volUMedown" | "volUMeDOwn" | "volUMeDOWN" | "volUMeDOWn" | "volUMeDOwN" | "volUMeDown" | "volUMeDoWN" | "volUMeDoWn" | "volUMeDowN" | "volUMedOwn" | "volUMedOWN" | "volUMedOWn" | "volUMedOwN" | "volUMedoWN" | "volUMedoWn" | "volUMedowN" | "volUmEdown" | "volUmEDOwn" | "volUmEDOWN" | "volUmEDOWn" | "volUmEDOwN" | "volUmEDown" | "volUmEDoWN" | "volUmEDoWn" | "volUmEDowN" | "volUmEdOwn" | "volUmEdOWN" | "volUmEdOWn" | "volUmEdOwN" | "volUmEdoWN" | "volUmEdoWn" | "volUmEdowN" | "volUmeDOwn" | "volUmeDOWN" | "volUmeDOWn" | "volUmeDOwN" | "volUmeDown" | "volUmeDoWN" | "volUmeDoWn" | "volUmeDowN" | "volUmedOwn" | "volUmedOWN" | "volUmedOWn" | "volUmedOwN" | "volUmedoWN" | "volUmedoWn" | "volUmedowN" | "voluMEdown" | "voluMEDOwn" | "voluMEDOWN" | "voluMEDOWn" | "voluMEDOwN" | "voluMEDown" | "voluMEDoWN" | "voluMEDoWn" | "voluMEDowN" | "voluMEdOwn" | "voluMEdOWN" | "voluMEdOWn" | "voluMEdOwN" | "voluMEdoWN" | "voluMEdoWn" | "voluMEdowN" | "voluMedown" | "voluMeDOwn" | "voluMeDOWN" | "voluMeDOWn" | "voluMeDOwN" | "voluMeDown" | "voluMeDoWN" | "voluMeDoWn" | "voluMeDowN" | "voluMedOwn" | "voluMedOWN" | "voluMedOWn" | "voluMedOwN" | "voluMedoWN" | "voluMedoWn" | "voluMedowN" | "volumEdown" | "volumEDOwn" | "volumEDOWN" | "volumEDOWn" | "volumEDOwN" | "volumEDown" | "volumEDoWN" | "volumEDoWn" | "volumEDowN" | "volumEdOwn" | "volumEdOWN" | "volumEdOWn" | "volumEdOwN" | "volumEdoWN" | "volumEdoWn" | "volumEdowN" | "volumeDOwn" | "volumeDOWN" | "volumeDOWn" | "volumeDOwN" | "volumeDown" | "volumeDoWN" | "volumeDoWn" | "volumeDowN" | "volumedOwn" | "volumedOWN" | "volumedOWn" | "volumedOwN" | "volumedoWN" | "volumedoWn" | "volumedowN" | "MEnu" | "MENU" | "MENu" | "MEnU" | "Menu" | "MeNU" | "MeNu" | "MenU" | "mEnu" | "mENU" | "mENu" | "mEnU" | "meNU" | "meNu" | "menU" | "PLaypause" | "PLAYpause" | "PLAYPAuse" | "PLAYPAUSe" | "PLAYPAUSE" | "PLAYPAUse" | "PLAYPAUsE" | "PLAYPAuSe" | "PLAYPAuSE" | "PLAYPAusE" | "PLAYPause" | "PLAYPaUSe" | "PLAYPaUSE" | "PLAYPaUse" | "PLAYPaUsE" | "PLAYPauSe" | "PLAYPauSE" | "PLAYPausE" | "PLAYpAuse" | "PLAYpAUSe" | "PLAYpAUSE" | "PLAYpAUse" | "PLAYpAUsE" | "PLAYpAuSe" | "PLAYpAuSE" | "PLAYpAusE" | "PLAYpaUSe" | "PLAYpaUSE" | "PLAYpaUse" | "PLAYpaUsE" | "PLAYpauSe" | "PLAYpauSE" | "PLAYpausE" | "PLAypause" | "PLAyPAuse" | "PLAyPAUSe" | "PLAyPAUSE" | "PLAyPAUse" | "PLAyPAUsE" | "PLAyPAuSe" | "PLAyPAuSE" | "PLAyPAusE" | "PLAyPause" | "PLAyPaUSe" | "PLAyPaUSE" | "PLAyPaUse" | "PLAyPaUsE" | "PLAyPauSe" | "PLAyPauSE" | "PLAyPausE" | "PLAypAuse" | "PLAypAUSe" | "PLAypAUSE" | "PLAypAUse" | "PLAypAUsE" | "PLAypAuSe" | "PLAypAuSE" | "PLAypAusE" | "PLAypaUSe" | "PLAypaUSE" | "PLAypaUse" | "PLAypaUsE" | "PLAypauSe" | "PLAypauSE" | "PLAypausE" | "PLaYpause" | "PLaYPAuse" | "PLaYPAUSe" | "PLaYPAUSE" | "PLaYPAUse" | "PLaYPAUsE" | "PLaYPAuSe" | "PLaYPAuSE" | "PLaYPAusE" | "PLaYPause" | "PLaYPaUSe" | "PLaYPaUSE" | "PLaYPaUse" | "PLaYPaUsE" | "PLaYPauSe" | "PLaYPauSE" | "PLaYPausE" | "PLaYpAuse" | "PLaYpAUSe" | "PLaYpAUSE" | "PLaYpAUse" | "PLaYpAUsE" | "PLaYpAuSe" | "PLaYpAuSE" | "PLaYpAusE" | "PLaYpaUSe" | "PLaYpaUSE" | "PLaYpaUse" | "PLaYpaUsE" | "PLaYpauSe" | "PLaYpauSE" | "PLaYpausE" | "PLayPAuse" | "PLayPAUSe" | "PLayPAUSE" | "PLayPAUse" | "PLayPAUsE" | "PLayPAuSe" | "PLayPAuSE" | "PLayPAusE" | "PLayPause" | "PLayPaUSe" | "PLayPaUSE" | "PLayPaUse" | "PLayPaUsE" | "PLayPauSe" | "PLayPauSE" | "PLayPausE" | "PLaypAuse" | "PLaypAUSe" | "PLaypAUSE" | "PLaypAUse" | "PLaypAUsE" | "PLaypAuSe" | "PLaypAuSE" | "PLaypAusE" | "PLaypaUSe" | "PLaypaUSE" | "PLaypaUse" | "PLaypaUsE" | "PLaypauSe" | "PLaypauSE" | "PLaypausE" | "Playpause" | "PlAYpause" | "PlAYPAuse" | "PlAYPAUSe" | "PlAYPAUSE" | "PlAYPAUse" | "PlAYPAUsE" | "PlAYPAuSe" | "PlAYPAuSE" | "PlAYPAusE" | "PlAYPause" | "PlAYPaUSe" | "PlAYPaUSE" | "PlAYPaUse" | "PlAYPaUsE" | "PlAYPauSe" | "PlAYPauSE" | "PlAYPausE" | "PlAYpAuse" | "PlAYpAUSe" | "PlAYpAUSE" | "PlAYpAUse" | "PlAYpAUsE" | "PlAYpAuSe" | "PlAYpAuSE" | "PlAYpAusE" | "PlAYpaUSe" | "PlAYpaUSE" | "PlAYpaUse" | "PlAYpaUsE" | "PlAYpauSe" | "PlAYpauSE" | "PlAYpausE" | "PlAypause" | "PlAyPAuse" | "PlAyPAUSe" | "PlAyPAUSE" | "PlAyPAUse" | "PlAyPAUsE" | "PlAyPAuSe" | "PlAyPAuSE" | "PlAyPAusE" | "PlAyPause" | "PlAyPaUSe" | "PlAyPaUSE" | "PlAyPaUse" | "PlAyPaUsE" | "PlAyPauSe" | "PlAyPauSE" | "PlAyPausE" | "PlAypAuse" | "PlAypAUSe" | "PlAypAUSE" | "PlAypAUse" | "PlAypAUsE" | "PlAypAuSe" | "PlAypAuSE" | "PlAypAusE" | "PlAypaUSe" | "PlAypaUSE" | "PlAypaUse" | "PlAypaUsE" | "PlAypauSe" | "PlAypauSE" | "PlAypausE" | "PlaYpause" | "PlaYPAuse" | "PlaYPAUSe" | "PlaYPAUSE" | "PlaYPAUse" | "PlaYPAUsE" | "PlaYPAuSe" | "PlaYPAuSE" | "PlaYPAusE" | "PlaYPause" | "PlaYPaUSe" | "PlaYPaUSE" | "PlaYPaUse" | "PlaYPaUsE" | "PlaYPauSe" | "PlaYPauSE" | "PlaYPausE" | "PlaYpAuse" | "PlaYpAUSe" | "PlaYpAUSE" | "PlaYpAUse" | "PlaYpAUsE" | "PlaYpAuSe" | "PlaYpAuSE" | "PlaYpAusE" | "PlaYpaUSe" | "PlaYpaUSE" | "PlaYpaUse" | "PlaYpaUsE" | "PlaYpauSe" | "PlaYpauSE" | "PlaYpausE" | "PlayPAuse" | "PlayPAUSe" | "PlayPAUSE" | "PlayPAUse" | "PlayPAUsE" | "PlayPAuSe" | "PlayPAuSE" | "PlayPAusE" | "PlayPause" | "PlayPaUSe" | "PlayPaUSE" | "PlayPaUse" | "PlayPaUsE" | "PlayPauSe" | "PlayPauSE" | "PlayPausE" | "PlaypAuse" | "PlaypAUSe" | "PlaypAUSE" | "PlaypAUse" | "PlaypAUsE" | "PlaypAuSe" | "PlaypAuSE" | "PlaypAusE" | "PlaypaUSe" | "PlaypaUSE" | "PlaypaUse" | "PlaypaUsE" | "PlaypauSe" | "PlaypauSE" | "PlaypausE" | "pLaypause" | "pLAYpause" | "pLAYPAuse" | "pLAYPAUSe" | "pLAYPAUSE" | "pLAYPAUse" | "pLAYPAUsE" | "pLAYPAuSe" | "pLAYPAuSE" | "pLAYPAusE" | "pLAYPause" | "pLAYPaUSe" | "pLAYPaUSE" | "pLAYPaUse" | "pLAYPaUsE" | "pLAYPauSe" | "pLAYPauSE" | "pLAYPausE" | "pLAYpAuse" | "pLAYpAUSe" | "pLAYpAUSE" | "pLAYpAUse" | "pLAYpAUsE" | "pLAYpAuSe" | "pLAYpAuSE" | "pLAYpAusE" | "pLAYpaUSe" | "pLAYpaUSE" | "pLAYpaUse" | "pLAYpaUsE" | "pLAYpauSe" | "pLAYpauSE" | "pLAYpausE" | "pLAypause" | "pLAyPAuse" | "pLAyPAUSe" | "pLAyPAUSE" | "pLAyPAUse" | "pLAyPAUsE" | "pLAyPAuSe" | "pLAyPAuSE" | "pLAyPAusE" | "pLAyPause" | "pLAyPaUSe" | "pLAyPaUSE" | "pLAyPaUse" | "pLAyPaUsE" | "pLAyPauSe" | "pLAyPauSE" | "pLAyPausE" | "pLAypAuse" | "pLAypAUSe" | "pLAypAUSE" | "pLAypAUse" | "pLAypAUsE" | "pLAypAuSe" | "pLAypAuSE" | "pLAypAusE" | "pLAypaUSe" | "pLAypaUSE" | "pLAypaUse" | "pLAypaUsE" | "pLAypauSe" | "pLAypauSE" | "pLAypausE" | "pLaYpause" | "pLaYPAuse" | "pLaYPAUSe" | "pLaYPAUSE" | "pLaYPAUse" | "pLaYPAUsE" | "pLaYPAuSe" | "pLaYPAuSE" | "pLaYPAusE" | "pLaYPause" | "pLaYPaUSe" | "pLaYPaUSE" | "pLaYPaUse" | "pLaYPaUsE" | "pLaYPauSe" | "pLaYPauSE" | "pLaYPausE" | "pLaYpAuse" | "pLaYpAUSe" | "pLaYpAUSE" | "pLaYpAUse" | "pLaYpAUsE" | "pLaYpAuSe" | "pLaYpAuSE" | "pLaYpAusE" | "pLaYpaUSe" | "pLaYpaUSE" | "pLaYpaUse" | "pLaYpaUsE" | "pLaYpauSe" | "pLaYpauSE" | "pLaYpausE" | "pLayPAuse" | "pLayPAUSe" | "pLayPAUSE" | "pLayPAUse" | "pLayPAUsE" | "pLayPAuSe" | "pLayPAuSE" | "pLayPAusE" | "pLayPause" | "pLayPaUSe" | "pLayPaUSE" | "pLayPaUse" | "pLayPaUsE" | "pLayPauSe" | "pLayPauSE" | "pLayPausE" | "pLaypAuse" | "pLaypAUSe" | "pLaypAUSE" | "pLaypAUse" | "pLaypAUsE" | "pLaypAuSe" | "pLaypAuSE" | "pLaypAusE" | "pLaypaUSe" | "pLaypaUSE" | "pLaypaUse" | "pLaypaUsE" | "pLaypauSe" | "pLaypauSE" | "pLaypausE" | "plAYpause" | "plAYPAuse" | "plAYPAUSe" | "plAYPAUSE" | "plAYPAUse" | "plAYPAUsE" | "plAYPAuSe" | "plAYPAuSE" | "plAYPAusE" | "plAYPause" | "plAYPaUSe" | "plAYPaUSE" | "plAYPaUse" | "plAYPaUsE" | "plAYPauSe" | "plAYPauSE" | "plAYPausE" | "plAYpAuse" | "plAYpAUSe" | "plAYpAUSE" | "plAYpAUse" | "plAYpAUsE" | "plAYpAuSe" | "plAYpAuSE" | "plAYpAusE" | "plAYpaUSe" | "plAYpaUSE" | "plAYpaUse" | "plAYpaUsE" | "plAYpauSe" | "plAYpauSE" | "plAYpausE" | "plAypause" | "plAyPAuse" | "plAyPAUSe" | "plAyPAUSE" | "plAyPAUse" | "plAyPAUsE" | "plAyPAuSe" | "plAyPAuSE" | "plAyPAusE" | "plAyPause" | "plAyPaUSe" | "plAyPaUSE" | "plAyPaUse" | "plAyPaUsE" | "plAyPauSe" | "plAyPauSE" | "plAyPausE" | "plAypAuse" | "plAypAUSe" | "plAypAUSE" | "plAypAUse" | "plAypAUsE" | "plAypAuSe" | "plAypAuSE" | "plAypAusE" | "plAypaUSe" | "plAypaUSE" | "plAypaUse" | "plAypaUsE" | "plAypauSe" | "plAypauSE" | "plAypausE" | "plaYpause" | "plaYPAuse" | "plaYPAUSe" | "plaYPAUSE" | "plaYPAUse" | "plaYPAUsE" | "plaYPAuSe" | "plaYPAuSE" | "plaYPAusE" | "plaYPause" | "plaYPaUSe" | "plaYPaUSE" | "plaYPaUse" | "plaYPaUsE" | "plaYPauSe" | "plaYPauSE" | "plaYPausE" | "plaYpAuse" | "plaYpAUSe" | "plaYpAUSE" | "plaYpAUse" | "plaYpAUsE" | "plaYpAuSe" | "plaYpAuSE" | "plaYpAusE" | "plaYpaUSe" | "plaYpaUSE" | "plaYpaUse" | "plaYpaUsE" | "plaYpauSe" | "plaYpauSE" | "plaYpausE" | "playPAuse" | "playPAUSe" | "playPAUSE" | "playPAUse" | "playPAUsE" | "playPAuSe" | "playPAuSE" | "playPAusE" | "playPause" | "playPaUSe" | "playPaUSE" | "playPaUse" | "playPaUsE" | "playPauSe" | "playPauSE" | "playPausE" | "playpAuse" | "playpAUSe" | "playpAUSE" | "playpAUse" | "playpAUsE" | "playpAuSe" | "playpAuSE" | "playpAusE" | "playpaUSe" | "playpaUSE" | "playpaUse" | "playpaUsE" | "playpauSe" | "playpauSE" | "playpausE" | "SElect" | "SELEct" | "SELECT" | "SELECt" | "SELEcT" | "SELect" | "SELeCT" | "SELeCt" | "SELecT" | "SElEct" | "SElECT" | "SElECt" | "SElEcT" | "SEleCT" | "SEleCt" | "SElecT" | "Select" | "SeLEct" | "SeLECT" | "SeLECt" | "SeLEcT" | "SeLect" | "SeLeCT" | "SeLeCt" | "SeLecT" | "SelEct" | "SelECT" | "SelECt" | "SelEcT" | "SeleCT" | "SeleCt" | "SelecT" | "sElect" | "sELEct" | "sELECT" | "sELECt" | "sELEcT" | "sELect" | "sELeCT" | "sELeCt" | "sELecT" | "sElEct" | "sElECT" | "sElECt" | "sElEcT" | "sEleCT" | "sEleCt" | "sElecT" | "seLEct" | "seLECT" | "seLECt" | "seLEcT" | "seLect" | "seLeCT" | "seLeCt" | "seLecT" | "selEct" | "selECT" | "selECt" | "selEcT" | "seleCT" | "seleCt" | "selecT", durationSeconds?: number | undefined): Promise<unknown>;
    /**
     * Process a string as speech and send it to Siri.
     *
     * Presents the Siri UI, if it is not currently active, and accepts a string which is then processed as if it were recognized speech. See [the documentation of `activateWithVoiceRecognitionText`](https://developer.apple.com/documentation/xctest/xcuisiriservice/2852140-activatewithvoicerecognitiontext?language=objc) for more details.
  
     * @param {string} text - Text to be sent to Siri
     * @returns {Promise<void>}
     * @this {XCUITestDriver}
     */
    function mobileSiriCommand(this: import("../driver").XCUITestDriver, text: string): Promise<void>;
    /**
     * @this {XCUITestDriver}
     */
    function getWindowSizeWeb(this: import("../driver").XCUITestDriver): Promise<any>;
    /**
     * @this {XCUITestDriver}
     */
    function getWindowSizeNative(this: import("../driver").XCUITestDriver): Promise<unknown>;
}
export default _default;
export type PressButtonOptions = {
    /**
     * - The name of the button to be pressed.
     */
    name: string;
    /**
     * - Duration in float seconds.
     */
    durationSeconds?: number | undefined;
};
export type XCUITestDriver = import('../driver').XCUITestDriver;
export type ScreenInfo = import('./types').ScreenInfo;
//# sourceMappingURL=general.d.ts.map